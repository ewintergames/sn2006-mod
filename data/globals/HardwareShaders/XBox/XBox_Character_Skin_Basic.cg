// #class XBox,Object,Skinning

struct App2Vert
{
    float4 position     : POSITION;
    float3 normal       : NORMAL;
    float2 uv0          : TEXCOORD0;
    float4 weight       : TEXCOORD2;
    float4 indices      : COLOR0;
};

struct Vert2Frag
{
    float4 position     : POSITION;
    float2 uv0          : TEXCOORD0;
    float4 diffuse      : COLOR0;
};

#ifdef __CGC__
#define MAX_SKINNING_BONES  30
#else
#define MAX_SKINNING_BONES  40
#endif

#include "../skinning.cginc"

#define MAX_LIGHTS          4

#include "../lighting2.cginc"

void vertex(in App2Vert vin, out Vert2Frag vout,
#ifdef __CGC__
        uniform float4x4 ModelViewProjMatrix, 
        uniform float3x4 BoneMatrices[MAX_SKINNING_BONES],
        uniform float4 Ambient,
        uniform float4 LightLocalPositionTable[MAX_LIGHTS],
        uniform float4 LightColorTable[MAX_LIGHTS],
        uniform float4 LightAttenuationTable[MAX_LIGHTS]
#else
        uniform float4x4 ModelViewProjMatrix : register(c-96), 
        uniform float4 Ambient : register(c-92),
        uniform float4 LightLocalPositionTable[MAX_LIGHTS] : register(c-91),
        uniform float4 LightColorTable[MAX_LIGHTS] : register(c-87),
        uniform float4 LightAttenuationTable[MAX_LIGHTS] : register(c-83),
        uniform float4 BoneMatrices[MAX_SKINNING_BONES][3] : register(c-36)
#endif
        )
{
    float3 position, normal;
    
    Skin(position,normal,vin.position,vin.normal,vin.indices,vin.weight,BoneMatrices);

    vout.position = mul(ModelViewProjMatrix, float4(position,1));
    vout.uv0 = vin.uv0;
    vout.diffuse = vertexDiffuse(position,normal,Ambient,LightLocalPositionTable,LightColorTable,LightAttenuationTable);
}

